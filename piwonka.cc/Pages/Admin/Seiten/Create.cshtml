@page
@model Piwonka.CC.Pages.Admin.Seiten.CreateModel
@{
    ViewData["Title"] = "Neue Seite erstellen";
}

<div class="container py-4">
    <div class="row mb-4">
        <div class="col">
            <h1>Neue Seite erstellen</h1>
        </div>
    </div>

    <div class="row">
        <div class="col-md-9">
            <form method="post" id="createSeiteForm">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="mb-3">
                    <label asp-for="SeiteViewModel.Titel" class="form-label">Titel</label>
                    <input asp-for="SeiteViewModel.Titel" class="form-control" required />
                    <span asp-validation-for="SeiteViewModel.Titel" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="SeiteViewModel.Language" class="form-label">Sprache</label>
                    <select asp-for="SeiteViewModel.Language" class="form-select">
                        <option value="0">🇩🇪 Deutsch</option>
                        <option value="1">🇬🇧 English</option>
                    </select>
                    <span asp-validation-for="SeiteViewModel.Language" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="SeiteViewModel.Slug" class="form-label">URL-Slug</label>
                    <div class="input-group">
                        <span class="input-group-text">/seite/</span>
                        <input asp-for="SeiteViewModel.Slug" class="form-control" />
                    </div>
                    <div class="form-text">Wird automatisch aus dem Titel generiert, falls leer gelassen.</div>
                    <span asp-validation-for="SeiteViewModel.Slug" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="SeiteViewModel.Inhalt" class="form-label">Inhalt</label>
                    <span asp-validation-for="SeiteViewModel.Inhalt" class="text-danger"></span>

                    <!-- TinyMCE Editor für Inhalt -->
                    <textarea id="SeiteViewModel_Inhalt" name="SeiteViewModel.Inhalt" rows="15" class="form-control">@Html.Raw(Model.SeiteViewModel?.Inhalt)</textarea>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label asp-for="SeiteViewModel.MetaDescription" class="form-label">Meta-Beschreibung</label>
                            <textarea asp-for="SeiteViewModel.MetaDescription" class="form-control" rows="3" maxlength="200"></textarea>
                            <div class="form-text">Für Suchmaschinen (max. 200 Zeichen)</div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label asp-for="SeiteViewModel.MetaKeywords" class="form-label">Meta-Keywords</label>
                            <input asp-for="SeiteViewModel.MetaKeywords" class="form-control" />
                            <div class="form-text">Komma-getrennt</div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-4">
                        <div class="mb-3 form-check">
                            <input asp-for="SeiteViewModel.IstVeroeffentlicht" class="form-check-input" />
                            <label asp-for="SeiteViewModel.IstVeroeffentlicht" class="form-check-label">Veröffentlichen</label>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="mb-3 form-check">
                            <input asp-for="SeiteViewModel.ImMenuAnzeigen" class="form-check-input" />
                            <label asp-for="SeiteViewModel.ImMenuAnzeigen" class="form-check-label">Im Menü anzeigen</label>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="mb-3">
                            <label asp-for="SeiteViewModel.Reihenfolge" class="form-label">Reihenfolge im Menü</label>
                            <input asp-for="SeiteViewModel.Reihenfolge" type="number" class="form-control" min="0" />
                        </div>
                    </div>
                </div>

                <div class="mb-3">
                    <label asp-for="SeiteViewModel.Template" class="form-label">Template</label>
                    <select asp-for="SeiteViewModel.Template" class="form-select">
                        <option value="Standard">Standard</option>
                        <option value="Kontakt">Kontakt</option>
                        <option value="Vollbreite">Vollbreite</option>
                    </select>
                </div>

                <div class="mb-3">
                    <a asp-page="./Index" class="btn btn-secondary">Abbrechen</a>
                    <button type="button" class="btn btn-primary" onclick="saveSeite()">Speichern</button>
                </div>
            </form>
        </div>

        <div class="col-md-3">
            <div class="card">
                <div class="card-header">
                    <h5>Hilfe</h5>
                </div>
                <div class="card-body">
                    <h6>Sprache</h6>
                    <p class="small">Wählen Sie die Sprache für diese Seite aus. Deutsch ist die Standardsprache.</p>

                    <h6>URL-Slug</h6>
                    <p class="small">Der Slug bestimmt die URL der Seite. Verwenden Sie nur Kleinbuchstaben, Zahlen und Bindestriche.</p>

                    <h6>Templates</h6>
                    <ul class="small">
                        <li><strong>Standard:</strong> Normale Seite mit Sidebar</li>
                        <li><strong>Kontakt:</strong> Spezial-Layout für Kontaktseiten</li>
                        <li><strong>Vollbreite:</strong> Ohne Sidebar</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        let seiteEditorInitialized = false;

        document.addEventListener('DOMContentLoaded', function() {
            initSeiteEditor();
            setupSlugGeneration();
        });

        function initSeiteEditor() {
            if (typeof tinymce === 'undefined') {
                setTimeout(initSeiteEditor, 100);
                return;
            }

            if (seiteEditorInitialized) {
                return;
            }

            console.log('Initialisiere TinyMCE für Seiten-Inhalt...');

            tinymce.init({
                selector: '#SeiteViewModel_Inhalt',
                height: 500,
                plugins: 'preview importcss searchreplace autolink autosave save directionality code visualblocks visualchars fullscreen image link media template codesample table charmap pagebreak nonbreaking anchor insertdatetime advlist lists wordcount help charmap quickbars emoticons',
                menubar: 'file edit view insert format tools table help',
                toolbar: 'undo redo | bold italic underline strikethrough | fontfamily fontsize blocks | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist | forecolor backcolor removeformat | pagebreak | charmap emoticons | fullscreen  preview save print | insertfile image media template link anchor codesample | ltr rtl',
                toolbar_sticky: true,
                entity_encoding: 'raw',

                init_instance_callback: function(editor) {
                    console.log('Seiten-Editor initialisiert:', editor.id);
                    seiteEditorInitialized = true;
                },

                setup: function(editor) {
                    editor.on('Change KeyUp Paste NodeChange', function() {
                        var content = editor.getContent();
                        document.getElementById('SeiteViewModel_Inhalt').value = content;
                    });
                }
            });
        }

        function setupSlugGeneration() {
            const titelInput = document.getElementById('SeiteViewModel_Titel');
            const slugInput = document.getElementById('SeiteViewModel_Slug');

            if (titelInput && slugInput) {
                titelInput.addEventListener('input', function() {
                    if (slugInput.value === '') {
                        const slug = generateSlug(this.value);
                        slugInput.value = slug;
                    }
                });
            }
        }

        function generateSlug(text) {
            return text.toLowerCase()
                .replace(/ä/g, 'ae')
                .replace(/ö/g, 'oe')
                .replace(/ü/g, 'ue')
                .replace(/ß/g, 'ss')
                .replace(/[^a-z0-9\s-]/g, '')
                .replace(/\s+/g, '-')
                .replace(/-+/g, '-')
                .trim('-');
        }

        function saveSeite() {
            console.log('saveSeite() aufgerufen');

            // TinyMCE-Inhalt explizit speichern
            var editor = tinymce.get('SeiteViewModel_Inhalt');
            if (editor) {
                var content = editor.getContent();
                document.getElementById('SeiteViewModel_Inhalt').value = content;
                console.log('Seiten-Inhalt gesetzt:', content.substring(0, 100) + '...');
            }

            // Form absenden
            document.getElementById('createSeiteForm').submit();
        }
    </script>
}