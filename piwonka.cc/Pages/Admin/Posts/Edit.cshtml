@page "{id:int}"
@model Piwonka.CC.Pages.Admin.Posts.EditModel
@{
    ViewData["Title"] = "Post bearbeiten";
}

<div class="row mb-4">
    <div class="col">
        <h1>Post bearbeiten</h1>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a asp-page="/Admin/Index">Admin</a></li>
                <li class="breadcrumb-item"><a asp-page="./Index">Posts</a></li>
                <li class="breadcrumb-item active">Bearbeiten</li>
            </ol>
        </nav>
    </div>
</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<div class="row">
    <div class="col-lg-8">
        <form method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

            <input type="hidden" asp-for="Post.Id" />
            <input type="hidden" asp-for="Post.ErstelltAm" />

            <div class="card mb-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Grundinformationen</h5>
                    <small class="text-muted">
                        Erstellt: @Model.Post.ErstelltAm.ToString("dd.MM.yyyy HH:mm")
                    </small>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label asp-for="Post.Titel" class="form-label">Titel *</label>
                        <input asp-for="Post.Titel" class="form-control" />
                        <span asp-validation-for="Post.Titel" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Post.Slug" class="form-label">URL-Slug</label>
                        <input asp-for="Post.Slug" class="form-control" />
                        <div class="form-text">URL: /blog/@Model.Post.Id/@Model.Post.Slug</div>
                        <span asp-validation-for="Post.Slug" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Post.Excerpt" class="form-label">Kurzbeschreibung *</label>
                        <textarea asp-for="Post.Excerpt" class="form-control" rows="3"></textarea>
                        <span asp-validation-for="Post.Excerpt" class="text-danger"></span>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <!-- ✅ KORREKTUR: SelectedKategorieId verwenden -->
                                <label asp-for="SelectedKategorieId" class="form-label">Kategorie</label>
                                <select asp-for="SelectedKategorieId" class="form-select" asp-items="Model.KategorieOptions">
                                    <option value="">-- Keine Kategorie --</option>
                                </select>
                                <span asp-validation-for="SelectedKategorieId" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="Post.Language" class="form-label">Sprache</label>
                                <select asp-for="Post.Language" class="form-select" asp-items="Model.LanguageOptions">
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">Inhalt</h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label asp-for="Post.Inhalt" class="form-label">Inhalt *</label>
                        <span asp-validation-for="Post.Inhalt" class="text-danger"></span>

                        <!-- Direktes Textarea ohne Partial -->
                        <textarea asp-for="Post.Inhalt" id="post-content-editor" rows="15" class="form-control"></textarea>
                    </div>
                </div>
            </div>

            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">Bild & Medien</h5>
                </div>
                <div class="card-body">
                    @if (!string.IsNullOrEmpty(Model.Post.BildUrl))
                    {
                        <div class="mb-3">
                            <label class="form-label">Aktuelles Bild</label>
                            <div>
                                <img src="@Model.Post.BildUrl" alt="Current image" class="img-thumbnail" style="max-height: 200px;" />
                            </div>
                        </div>
                    }

                    <div class="mb-3">
                        <label asp-for="Post.BildUrl" class="form-label">Bild URL</label>
                        <input asp-for="Post.BildUrl" class="form-control" />
                        <span asp-validation-for="Post.BildUrl" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Post.UploadedImage" class="form-label">Neues Bild hochladen</label>
                        <!-- ✅ KORREKTUR: data-val="false" verhindert clientseitige Validierung -->
                        <input asp-for="Post.UploadedImage" type="file" class="form-control" accept="image/*" data-val="false" />
                        <div class="form-text">Überschreibt die Bild URL</div>
                        <!-- ✅ Validation-Span entfernen, da optional -->
                    </div>
                </div>
            </div>

            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">SEO & Meta</h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label asp-for="Post.MetaDescription" class="form-label">Meta Description</label>
                        <textarea asp-for="Post.MetaDescription" class="form-control" rows="2" maxlength="500"></textarea>
                        <span asp-validation-for="Post.MetaDescription" class="text-danger"></span>
                        <div class="form-text">
                            <span id="metaDescCounter">@(Model.Post.MetaDescription?.Length ?? 0)</span>/500 Zeichen
                        </div>
                    </div>

                    <div class="mb-3">
                        <label asp-for="Post.MetaKeywords" class="form-label">Meta Keywords</label>
                        <input asp-for="Post.MetaKeywords" class="form-control" />
                        <span asp-validation-for="Post.MetaKeywords" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="mb-0">Veröffentlichung</h5>
                </div>
                <div class="card-body">
                    <div class="mb-3 form-check">
                        <!-- ✅ KORREKTUR: IstVeroeffentlicht verwenden -->
                        <input asp-for="Post.IstVeroeffentlicht" class="form-check-input" />
                        <label asp-for="Post.IstVeroeffentlicht" class="form-check-label">Veröffentlicht</label>
                    </div>
                </div>
            </div>

            <div class="mb-3">
                <a asp-page="./Index" class="btn btn-secondary">
                    <i class="bi bi-arrow-left"></i> Zurück zur Übersicht
                </a>
                <a asp-page="/Blog/Detail" asp-route-id="@Model.Post.Id" asp-route-slug="@Model.Post.Slug"
                   class="btn btn-outline-primary" target="_blank">
                    <i class="bi bi-eye"></i> Vorschau
                </a>
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-check-lg"></i> Änderungen speichern
                </button>
            </div>
        </form>
    </div>

    <div class="col-lg-4">
        <div class="card mb-3">
            <div class="card-header">
                <h6 class="mb-0">Post-Statistiken</h6>
            </div>
            <div class="card-body">
                <p class="mb-1">
                    <strong>Status:</strong>
                    <!-- ✅ KORREKTUR: IstVeroeffentlicht verwenden -->
                    @if (Model.Post.IstVeroeffentlicht)
                    {
                        <span class="badge bg-success">Veröffentlicht</span>
                    }
                    else
                    {
                        <span class="badge bg-secondary">Entwurf</span>
                    }
                </p>
                <p class="mb-1"><strong>Sprache:</strong> @(Model.Post.Language == Piwonka.CC.Models.Language.DE ? "Deutsch" : "English")</p>
                <p class="mb-1"><strong>Kategorie:</strong> @(Model.Post.Kategorie?.Name ?? "Keine")</p>
                <p class="mb-0"><strong>Erstellt:</strong> @Model.Post.ErstelltAm.ToString("dd.MM.yyyy")</p>
            </div>
        </div>

        <div class="card">
            <div class="card-header">
                <h6 class="mb-0">Schnellaktionen</h6>
            </div>
            <div class="card-body">
                <div class="d-grid gap-2">
                    <a asp-page="./Create" class="btn btn-outline-primary btn-sm">
                        <i class="bi bi-plus"></i> Neuer Post
                    </a>
                    <a asp-page="./Delete" asp-route-id="@Model.Post.Id" class="btn btn-outline-danger btn-sm">
                        <i class="bi bi-trash"></i> Post löschen
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            tinymce.init({
                selector: '#post-content-editor',
                plugins: 'preview importcss searchreplace autolink autosave save directionality code visualblocks visualchars fullscreen image link media template codesample table charmap pagebreak nonbreaking anchor insertdatetime advlist lists wordcount help charmap quickbars emoticons',
                menubar: 'file edit view insert format tools table help',
                toolbar: 'undo redo | bold italic underline strikethrough | fontfamily fontsize blocks | alignleft aligncenter alignright alignjustify | outdent indent | numlist bullist | forecolor backcolor removeformat | pagebreak | charmap emoticons | fullscreen preview save print | insertfile image media template link anchor codesample | ltr rtl',
                toolbar_sticky: true,
                height: 400,

                // WICHTIGSTE EINSTELLUNGEN für das Speichern:
                setup: function(editor) {
                    // Content synchronisieren bei jeder Änderung
                    editor.on('change', function() {
                        tinymce.triggerSave();
                    });

        // ✅ ÄNDERUNG 2: Kategorien bei Sprachwechsel neu laden
        document.addEventListener('DOMContentLoaded', function() {
            const languageSelect = document.querySelector('select[name="Post.Language"]');
            const categorySelect = document.querySelector('select[name="SelectedKategorieId"]');

            if (languageSelect && categorySelect) {
                languageSelect.addEventListener('change', function() {
                    const selectedLanguage = this.value;

                    // AJAX-Aufruf um Kategorien für die gewählte Sprache zu laden
                    fetch(`/Admin/Posts/GetCategoriesForLanguage?language=${selectedLanguage}`)
                        .then(response => response.json())
                        .then(categories => {
                            // Dropdown leeren
                            categorySelect.innerHTML = '<option value="">-- Keine Kategorie --</option>';

                            // Neue Kategorien hinzufügen
                            categories.forEach(category => {
                                const option = document.createElement('option');
                                option.value = category.id;
                                option.textContent = category.name;
                                categorySelect.appendChild(option);
                            });
                        })
                        .catch(error => {
                            console.error('Fehler beim Laden der Kategorien:', error);
                        });
                });
            }
        });

                    editor.on('blur', function() {
                        tinymce.triggerSave();
                    });
                }
            });

            // Form Submit Handler
            const form = document.querySelector('form');
            if (form) {
                form.addEventListener('submit', function(e) {
                    console.log('Form wird abgesendet...');

                    // Alle TinyMCE Editoren synchronisieren
                    tinymce.triggerSave();

                    // Debug Log
                    const content = document.getElementById('post-content-editor').value;
                    console.log('Submitting content:', content);

                    // ✅ File-Input Validierung deaktivieren
                    const fileInput = document.querySelector('input[name="Post.UploadedImage"]');
                    if (fileInput) {
                        fileInput.removeAttribute('required');
                        fileInput.setAttribute('data-val', 'false');
                        console.log('File input validation disabled');
                    }

                    // Falls Content leer ist, verhindern und Warnung anzeigen
                    if (!content || content.trim() === '' || content === '<p></p>') {
                        alert('Bitte füllen Sie den Inhalt aus.');
                        e.preventDefault();
                        return false;
                    }

                    console.log('Form validation passed, submitting...');
                });
            }
        });

        // Meta Description Zeichenzähler
        document.addEventListener('DOMContentLoaded', function() {
            const metaDesc = document.querySelector('textarea[name="Post.MetaDescription"]');
            const counter = document.getElementById('metaDescCounter');

            if (metaDesc && counter) {
                metaDesc.addEventListener('input', function() {
                    counter.textContent = this.value.length;

                    if (this.value.length > 160) {
                        counter.className = 'text-warning';
                    } else if (this.value.length > 500) {
                        counter.className = 'text-danger';
                    } else {
                        counter.className = '';
                    }
                });
            }
        });
    </script>
}